// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: shortly.proto

package proto

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// CreateShortLinkV1Request is the request message for CreateShortLinkV1
type CreateShortLinkV1Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Url           string                 `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateShortLinkV1Request) Reset() {
	*x = CreateShortLinkV1Request{}
	mi := &file_shortly_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateShortLinkV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateShortLinkV1Request) ProtoMessage() {}

func (x *CreateShortLinkV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_shortly_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateShortLinkV1Request.ProtoReflect.Descriptor instead.
func (*CreateShortLinkV1Request) Descriptor() ([]byte, []int) {
	return file_shortly_proto_rawDescGZIP(), []int{0}
}

func (x *CreateShortLinkV1Request) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

// CreateShortLinkV1Response is the response message for CreateShortLinkV1
type CreateShortLinkV1Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ShortUrl      string                 `protobuf:"bytes,1,opt,name=short_url,json=shortUrl,proto3" json:"short_url,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Code          int32                  `protobuf:"varint,3,opt,name=code,proto3" json:"code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateShortLinkV1Response) Reset() {
	*x = CreateShortLinkV1Response{}
	mi := &file_shortly_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateShortLinkV1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateShortLinkV1Response) ProtoMessage() {}

func (x *CreateShortLinkV1Response) ProtoReflect() protoreflect.Message {
	mi := &file_shortly_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateShortLinkV1Response.ProtoReflect.Descriptor instead.
func (*CreateShortLinkV1Response) Descriptor() ([]byte, []int) {
	return file_shortly_proto_rawDescGZIP(), []int{1}
}

func (x *CreateShortLinkV1Response) GetShortUrl() string {
	if x != nil {
		return x.ShortUrl
	}
	return ""
}

func (x *CreateShortLinkV1Response) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *CreateShortLinkV1Response) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

// GetShortLinkV1Request is the request message for GetShortLinkV1
type GetShortLinkV1Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ShortCode     string                 `protobuf:"bytes,1,opt,name=short_code,json=shortCode,proto3" json:"short_code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetShortLinkV1Request) Reset() {
	*x = GetShortLinkV1Request{}
	mi := &file_shortly_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetShortLinkV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShortLinkV1Request) ProtoMessage() {}

func (x *GetShortLinkV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_shortly_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShortLinkV1Request.ProtoReflect.Descriptor instead.
func (*GetShortLinkV1Request) Descriptor() ([]byte, []int) {
	return file_shortly_proto_rawDescGZIP(), []int{2}
}

func (x *GetShortLinkV1Request) GetShortCode() string {
	if x != nil {
		return x.ShortCode
	}
	return ""
}

// GetShortLinkV1Response is the response message for GetShortLinkV1
type GetShortLinkV1Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RedirectUrl   string                 `protobuf:"bytes,1,opt,name=redirect_url,json=redirectUrl,proto3" json:"redirect_url,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Code          int32                  `protobuf:"varint,3,opt,name=code,proto3" json:"code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetShortLinkV1Response) Reset() {
	*x = GetShortLinkV1Response{}
	mi := &file_shortly_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetShortLinkV1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShortLinkV1Response) ProtoMessage() {}

func (x *GetShortLinkV1Response) ProtoReflect() protoreflect.Message {
	mi := &file_shortly_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShortLinkV1Response.ProtoReflect.Descriptor instead.
func (*GetShortLinkV1Response) Descriptor() ([]byte, []int) {
	return file_shortly_proto_rawDescGZIP(), []int{3}
}

func (x *GetShortLinkV1Response) GetRedirectUrl() string {
	if x != nil {
		return x.RedirectUrl
	}
	return ""
}

func (x *GetShortLinkV1Response) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetShortLinkV1Response) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

// BatchCreateShortLinksV1Request is the request message for BatchCreateShortLinksV1
type BatchCreateShortLinksV1Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*BatchCreateParams   `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchCreateShortLinksV1Request) Reset() {
	*x = BatchCreateShortLinksV1Request{}
	mi := &file_shortly_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchCreateShortLinksV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCreateShortLinksV1Request) ProtoMessage() {}

func (x *BatchCreateShortLinksV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_shortly_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCreateShortLinksV1Request.ProtoReflect.Descriptor instead.
func (*BatchCreateShortLinksV1Request) Descriptor() ([]byte, []int) {
	return file_shortly_proto_rawDescGZIP(), []int{4}
}

func (x *BatchCreateShortLinksV1Request) GetItems() []*BatchCreateParams {
	if x != nil {
		return x.Items
	}
	return nil
}

// BatchCreateParams is the request message for BatchCreateShortLinksV1
type BatchCreateParams struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CorrelationId string                 `protobuf:"bytes,1,opt,name=correlation_id,json=correlationId,proto3" json:"correlation_id,omitempty"`
	OriginalUrl   string                 `protobuf:"bytes,2,opt,name=original_url,json=originalUrl,proto3" json:"original_url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchCreateParams) Reset() {
	*x = BatchCreateParams{}
	mi := &file_shortly_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchCreateParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCreateParams) ProtoMessage() {}

func (x *BatchCreateParams) ProtoReflect() protoreflect.Message {
	mi := &file_shortly_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCreateParams.ProtoReflect.Descriptor instead.
func (*BatchCreateParams) Descriptor() ([]byte, []int) {
	return file_shortly_proto_rawDescGZIP(), []int{5}
}

func (x *BatchCreateParams) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *BatchCreateParams) GetOriginalUrl() string {
	if x != nil {
		return x.OriginalUrl
	}
	return ""
}

// BatchCreateShortLinksV1Response is the response message for BatchCreateShortLinksV1
type BatchCreateShortLinksV1Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*BatchCreateResult   `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Code          int32                  `protobuf:"varint,3,opt,name=code,proto3" json:"code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchCreateShortLinksV1Response) Reset() {
	*x = BatchCreateShortLinksV1Response{}
	mi := &file_shortly_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchCreateShortLinksV1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCreateShortLinksV1Response) ProtoMessage() {}

func (x *BatchCreateShortLinksV1Response) ProtoReflect() protoreflect.Message {
	mi := &file_shortly_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCreateShortLinksV1Response.ProtoReflect.Descriptor instead.
func (*BatchCreateShortLinksV1Response) Descriptor() ([]byte, []int) {
	return file_shortly_proto_rawDescGZIP(), []int{6}
}

func (x *BatchCreateShortLinksV1Response) GetItems() []*BatchCreateResult {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *BatchCreateShortLinksV1Response) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *BatchCreateShortLinksV1Response) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

// BatchCreateResult is the response message for BatchCreateShortLinksV1
type BatchCreateResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CorrelationId string                 `protobuf:"bytes,1,opt,name=correlation_id,json=correlationId,proto3" json:"correlation_id,omitempty"`
	ShortUrl      string                 `protobuf:"bytes,2,opt,name=short_url,json=shortUrl,proto3" json:"short_url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchCreateResult) Reset() {
	*x = BatchCreateResult{}
	mi := &file_shortly_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchCreateResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCreateResult) ProtoMessage() {}

func (x *BatchCreateResult) ProtoReflect() protoreflect.Message {
	mi := &file_shortly_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCreateResult.ProtoReflect.Descriptor instead.
func (*BatchCreateResult) Descriptor() ([]byte, []int) {
	return file_shortly_proto_rawDescGZIP(), []int{7}
}

func (x *BatchCreateResult) GetCorrelationId() string {
	if x != nil {
		return x.CorrelationId
	}
	return ""
}

func (x *BatchCreateResult) GetShortUrl() string {
	if x != nil {
		return x.ShortUrl
	}
	return ""
}

// GetUserURLsV1Request is the request message for GetUserURLsV1
type GetUserURLsV1Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Page          uint64                 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Per           uint64                 `protobuf:"varint,2,opt,name=per,proto3" json:"per,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserURLsV1Request) Reset() {
	*x = GetUserURLsV1Request{}
	mi := &file_shortly_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserURLsV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserURLsV1Request) ProtoMessage() {}

func (x *GetUserURLsV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_shortly_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserURLsV1Request.ProtoReflect.Descriptor instead.
func (*GetUserURLsV1Request) Descriptor() ([]byte, []int) {
	return file_shortly_proto_rawDescGZIP(), []int{8}
}

func (x *GetUserURLsV1Request) GetPage() uint64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetUserURLsV1Request) GetPer() uint64 {
	if x != nil {
		return x.Per
	}
	return 0
}

// GetUserURLsV1Response is the response message for GetUserURLsV1
type GetUserURLsV1Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*UserURL             `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Total         uint64                 `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserURLsV1Response) Reset() {
	*x = GetUserURLsV1Response{}
	mi := &file_shortly_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserURLsV1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserURLsV1Response) ProtoMessage() {}

func (x *GetUserURLsV1Response) ProtoReflect() protoreflect.Message {
	mi := &file_shortly_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserURLsV1Response.ProtoReflect.Descriptor instead.
func (*GetUserURLsV1Response) Descriptor() ([]byte, []int) {
	return file_shortly_proto_rawDescGZIP(), []int{9}
}

func (x *GetUserURLsV1Response) GetItems() []*UserURL {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *GetUserURLsV1Response) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

// UserURL is the object for GetUserURLsV1Response
type UserURL struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ShortUrl      string                 `protobuf:"bytes,1,opt,name=short_url,json=shortUrl,proto3" json:"short_url,omitempty"`
	OriginalUrl   string                 `protobuf:"bytes,2,opt,name=original_url,json=originalUrl,proto3" json:"original_url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserURL) Reset() {
	*x = UserURL{}
	mi := &file_shortly_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserURL) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserURL) ProtoMessage() {}

func (x *UserURL) ProtoReflect() protoreflect.Message {
	mi := &file_shortly_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserURL.ProtoReflect.Descriptor instead.
func (*UserURL) Descriptor() ([]byte, []int) {
	return file_shortly_proto_rawDescGZIP(), []int{10}
}

func (x *UserURL) GetShortUrl() string {
	if x != nil {
		return x.ShortUrl
	}
	return ""
}

func (x *UserURL) GetOriginalUrl() string {
	if x != nil {
		return x.OriginalUrl
	}
	return ""
}

// DeleteUserURLsV1Request is the request message for DeleteUserURLsV1
type DeleteUserURLsV1Request struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ShortCodes    []string               `protobuf:"bytes,1,rep,name=short_codes,json=shortCodes,proto3" json:"short_codes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteUserURLsV1Request) Reset() {
	*x = DeleteUserURLsV1Request{}
	mi := &file_shortly_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteUserURLsV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserURLsV1Request) ProtoMessage() {}

func (x *DeleteUserURLsV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_shortly_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserURLsV1Request.ProtoReflect.Descriptor instead.
func (*DeleteUserURLsV1Request) Descriptor() ([]byte, []int) {
	return file_shortly_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteUserURLsV1Request) GetShortCodes() []string {
	if x != nil {
		return x.ShortCodes
	}
	return nil
}

// DeleteUserURLsV1Response is the response message for DeleteUserURLsV1
type DeleteUserURLsV1Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Code          int32                  `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteUserURLsV1Response) Reset() {
	*x = DeleteUserURLsV1Response{}
	mi := &file_shortly_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteUserURLsV1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserURLsV1Response) ProtoMessage() {}

func (x *DeleteUserURLsV1Response) ProtoReflect() protoreflect.Message {
	mi := &file_shortly_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserURLsV1Response.ProtoReflect.Descriptor instead.
func (*DeleteUserURLsV1Response) Descriptor() ([]byte, []int) {
	return file_shortly_proto_rawDescGZIP(), []int{12}
}

func (x *DeleteUserURLsV1Response) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *DeleteUserURLsV1Response) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

var File_shortly_proto protoreflect.FileDescriptor

var file_shortly_proto_rawDesc = string([]byte{
	0x0a, 0x0d, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x6c, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0a, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x62, 0x75, 0x66,
	0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x46, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x56, 0x31, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x18, 0xba, 0x48, 0x15, 0x72, 0x13, 0x10, 0x01, 0x18, 0x80, 0x10, 0x32, 0x0c, 0x5e,
	0x68, 0x74, 0x74, 0x70, 0x73, 0x3f, 0x3a, 0x2f, 0x2f, 0x2e, 0x2a, 0x52, 0x03, 0x75, 0x72, 0x6c,
	0x22, 0x64, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x4c,
	0x69, 0x6e, 0x6b, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x40, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f,
	0x72, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x27, 0x0a, 0x0a, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x08, 0xba, 0x48, 0x05, 0x72, 0x03, 0x98, 0x01, 0x08, 0x52, 0x09, 0x73,
	0x68, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x67, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x53,
	0x68, 0x6f, 0x72, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x22, 0x62, 0x0a, 0x1e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x53, 0x68, 0x6f, 0x72, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x42, 0x0b, 0xba, 0x48, 0x08, 0x92, 0x01, 0x05, 0x08, 0x01, 0x10, 0xe8, 0x07, 0x52, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x81, 0x01, 0x0a, 0x11, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x2f, 0x0a, 0x0e, 0x63,
	0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x08, 0xba, 0x48, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x0d, 0x63,
	0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x3b, 0x0a, 0x0c,
	0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x18, 0xba, 0x48, 0x15, 0x72, 0x13, 0x10, 0x01, 0x18, 0x80, 0x10, 0x32, 0x0c,
	0x5e, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3f, 0x3a, 0x2f, 0x2f, 0x2e, 0x2a, 0x52, 0x0b, 0x6f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x55, 0x72, 0x6c, 0x22, 0x82, 0x01, 0x0a, 0x1f, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x4c, 0x69,
	0x6e, 0x6b, 0x73, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73,
	0x68, 0x6f, 0x72, 0x74, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x57,
	0x0a, 0x11, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x72,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x68,
	0x6f, 0x72, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73,
	0x68, 0x6f, 0x72, 0x74, 0x55, 0x72, 0x6c, 0x22, 0x4e, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x55, 0x52, 0x4c, 0x73, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1b, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0xba,
	0x48, 0x04, 0x32, 0x02, 0x28, 0x01, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x19, 0x0a, 0x03,
	0x70, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0xba, 0x48, 0x04, 0x32, 0x02,
	0x28, 0x01, 0x52, 0x03, 0x70, 0x65, 0x72, 0x22, 0x58, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x55, 0x52, 0x4c, 0x73, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x29, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x55, 0x52, 0x4c, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x22, 0x49, 0x0a, 0x07, 0x55, 0x73, 0x65, 0x72, 0x55, 0x52, 0x4c, 0x12, 0x1b, 0x0a, 0x09,
	0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x55, 0x72, 0x6c, 0x22, 0x4a, 0x0a, 0x17,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x55, 0x52, 0x4c, 0x73, 0x56, 0x31,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x0b, 0x73, 0x68, 0x6f, 0x72, 0x74,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x42, 0x0e, 0xba, 0x48,
	0x0b, 0x92, 0x01, 0x08, 0x08, 0x01, 0x22, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0a, 0x73, 0x68,
	0x6f, 0x72, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x22, 0x46, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x55, 0x52, 0x4c, 0x73, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x32, 0xf2, 0x03, 0x0a, 0x0c, 0x55, 0x52, 0x4c, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x65, 0x6e, 0x65,
	0x72, 0x12, 0x60, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x72, 0x74,
	0x4c, 0x69, 0x6e, 0x6b, 0x56, 0x31, 0x12, 0x24, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x6c, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x4c,
	0x69, 0x6e, 0x6b, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x73,
	0x68, 0x6f, 0x72, 0x74, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x53, 0x68, 0x6f, 0x72, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x4c,
	0x69, 0x6e, 0x6b, 0x56, 0x31, 0x12, 0x21, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x6c, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x56,
	0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74,
	0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x4c, 0x69,
	0x6e, 0x6b, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x72, 0x0a, 0x17,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x72, 0x74,
	0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x56, 0x31, 0x12, 0x2a, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x6c,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x53, 0x68, 0x6f, 0x72, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x6c, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x72,
	0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x54, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x55, 0x52, 0x4c, 0x73, 0x56,
	0x31, 0x12, 0x20, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x55, 0x52, 0x4c, 0x73, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x6c, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x55, 0x52, 0x4c, 0x73, 0x56, 0x31, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x55, 0x52, 0x4c, 0x73, 0x56, 0x31, 0x12, 0x23, 0x2e, 0x73, 0x68, 0x6f,
	0x72, 0x74, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x55, 0x52, 0x4c, 0x73, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x24, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x55, 0x52, 0x4c, 0x73, 0x56, 0x31, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x30, 0x5a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x61, 0x62, 0x2f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x6c, 0x79, 0x2f,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x67, 0x72, 0x70,
	0x63, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_shortly_proto_rawDescOnce sync.Once
	file_shortly_proto_rawDescData []byte
)

func file_shortly_proto_rawDescGZIP() []byte {
	file_shortly_proto_rawDescOnce.Do(func() {
		file_shortly_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_shortly_proto_rawDesc), len(file_shortly_proto_rawDesc)))
	})
	return file_shortly_proto_rawDescData
}

var file_shortly_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_shortly_proto_goTypes = []any{
	(*CreateShortLinkV1Request)(nil),        // 0: shortly.v1.CreateShortLinkV1Request
	(*CreateShortLinkV1Response)(nil),       // 1: shortly.v1.CreateShortLinkV1Response
	(*GetShortLinkV1Request)(nil),           // 2: shortly.v1.GetShortLinkV1Request
	(*GetShortLinkV1Response)(nil),          // 3: shortly.v1.GetShortLinkV1Response
	(*BatchCreateShortLinksV1Request)(nil),  // 4: shortly.v1.BatchCreateShortLinksV1Request
	(*BatchCreateParams)(nil),               // 5: shortly.v1.BatchCreateParams
	(*BatchCreateShortLinksV1Response)(nil), // 6: shortly.v1.BatchCreateShortLinksV1Response
	(*BatchCreateResult)(nil),               // 7: shortly.v1.BatchCreateResult
	(*GetUserURLsV1Request)(nil),            // 8: shortly.v1.GetUserURLsV1Request
	(*GetUserURLsV1Response)(nil),           // 9: shortly.v1.GetUserURLsV1Response
	(*UserURL)(nil),                         // 10: shortly.v1.UserURL
	(*DeleteUserURLsV1Request)(nil),         // 11: shortly.v1.DeleteUserURLsV1Request
	(*DeleteUserURLsV1Response)(nil),        // 12: shortly.v1.DeleteUserURLsV1Response
}
var file_shortly_proto_depIdxs = []int32{
	5,  // 0: shortly.v1.BatchCreateShortLinksV1Request.items:type_name -> shortly.v1.BatchCreateParams
	7,  // 1: shortly.v1.BatchCreateShortLinksV1Response.items:type_name -> shortly.v1.BatchCreateResult
	10, // 2: shortly.v1.GetUserURLsV1Response.items:type_name -> shortly.v1.UserURL
	0,  // 3: shortly.v1.URLShortener.CreateShortLinkV1:input_type -> shortly.v1.CreateShortLinkV1Request
	2,  // 4: shortly.v1.URLShortener.GetShortLinkV1:input_type -> shortly.v1.GetShortLinkV1Request
	4,  // 5: shortly.v1.URLShortener.BatchCreateShortLinksV1:input_type -> shortly.v1.BatchCreateShortLinksV1Request
	8,  // 6: shortly.v1.URLShortener.GetUserURLsV1:input_type -> shortly.v1.GetUserURLsV1Request
	11, // 7: shortly.v1.URLShortener.DeleteUserURLsV1:input_type -> shortly.v1.DeleteUserURLsV1Request
	1,  // 8: shortly.v1.URLShortener.CreateShortLinkV1:output_type -> shortly.v1.CreateShortLinkV1Response
	3,  // 9: shortly.v1.URLShortener.GetShortLinkV1:output_type -> shortly.v1.GetShortLinkV1Response
	6,  // 10: shortly.v1.URLShortener.BatchCreateShortLinksV1:output_type -> shortly.v1.BatchCreateShortLinksV1Response
	9,  // 11: shortly.v1.URLShortener.GetUserURLsV1:output_type -> shortly.v1.GetUserURLsV1Response
	12, // 12: shortly.v1.URLShortener.DeleteUserURLsV1:output_type -> shortly.v1.DeleteUserURLsV1Response
	8,  // [8:13] is the sub-list for method output_type
	3,  // [3:8] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_shortly_proto_init() }
func file_shortly_proto_init() {
	if File_shortly_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_shortly_proto_rawDesc), len(file_shortly_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_shortly_proto_goTypes,
		DependencyIndexes: file_shortly_proto_depIdxs,
		MessageInfos:      file_shortly_proto_msgTypes,
	}.Build()
	File_shortly_proto = out.File
	file_shortly_proto_goTypes = nil
	file_shortly_proto_depIdxs = nil
}
